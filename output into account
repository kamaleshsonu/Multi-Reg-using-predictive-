import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

import os
print(os.getcwd()) 
 
os.chdir('C:\\Users\\SONU\\Desktop\\data projects 2\\') 

df = pd.read_csv('taxi.csv')

df.columns

X = df.iloc[:,0:-1].values
y = df.iloc[:,-1].values


from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)



from sklearn.linear_model import LinearRegression

regressor = LinearRegression()
regressor.fit(X_train,y_train)



#Step 7 - Interpreting the Coefficient and the Intercept
y_pred = regressor.predict(X_test)
print(regressor.coef_)
print(regressor.intercept_)


#Step 8 - Interpreting the Coefficient and the Intercept

print(regressor.coef_)
print(regressor.intercept_)

#Step 9 - Predict the Score (% Accuracy)

print('Train Score :', regressor.score(X_train,y_train))
print('Test Score:', regressor.score(X_test,y_test))


#Step 10- Verification of the Predicted Value

#y = b0 + b1*x1 + b2*x2 + b3*x3 + ... + bn*xn

y_output0 = regressor.intercept_ + regressor.coef_[0]*X_test[0][0] + regressor.coef_[1]*X_test[0][1] + regressor.coef_[2]*X_test[0][2] + regressor.coef_[3]*X_test[0][3]

y_output1 = regressor.intercept_ + regressor.coef_[0]*X_test[1][0] + regressor.coef_[1]*X_test[1][1] + regressor.coef_[2]*X_test[1][2] + regressor.coef_[3]*X_test[1][3] 

#Step 11- Calculate the MSE and RMSE

from sklearn import metrics

print('MSE :', metrics.mean_squared_error(y_test,y_pred))

print('RMSE :', np.sqrt(metrics.mean_squared_error(y_test,y_pred)))

############################################################################################

X1 = [[80, 1770000, 6000, 85]]
out1 = regressor.predict(X1)
















